<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="28" passed="28">
  <reporter-output>
  </reporter-output>
  <suite name="All Test Classes" duration-ms="8204" started-at="2021-04-30T20:12:51Z" finished-at="2021-04-30T20:12:59Z">
    <groups>
    </groups>
    <test name="Execute All Test Cases" duration-ms="8204" started-at="2021-04-30T20:12:51Z" finished-at="2021-04-30T20:12:59Z">
      <class name="testcase.multipleEndpoints.posts.PostsByUserTest">
        <test-method status="PASS" signature="testTotalCountOfPostsByUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:testcase.multipleEndpoints.posts.PostsByUserTest@1936f0f5]" name="testTotalCountOfPostsByUserAndValidateResponseBody" duration-ms="201" started-at="2021-04-30T20:12:59Z" data-provider="validUsernameWithNumberOfPosts" finished-at="2021-04-30T20:12:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Antonette]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfPostsByUserAndValidateResponseBody -->
        <test-method status="PASS" signature="testTotalCountOfPostsByUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:testcase.multipleEndpoints.posts.PostsByUserTest@1936f0f5]" name="testTotalCountOfPostsByUserAndValidateResponseBody" duration-ms="212" started-at="2021-04-30T20:12:59Z" data-provider="validUsernameWithNumberOfPosts" finished-at="2021-04-30T20:12:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karianne]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfPostsByUserAndValidateResponseBody -->
        <test-method status="PASS" signature="testTotalCountOfPostsByUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:testcase.multipleEndpoints.posts.PostsByUserTest@1936f0f5]" name="testTotalCountOfPostsByUserAndValidateResponseBody" duration-ms="166" started-at="2021-04-30T20:12:59Z" data-provider="validUsernameWithNumberOfPosts" finished-at="2021-04-30T20:12:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kamren]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfPostsByUserAndValidateResponseBody -->
      </class> <!-- testcase.multipleEndpoints.posts.PostsByUserTest -->
      <class name="testcase.singleEndpoint.comment.CommentsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testcase.singleEndpoint.comment.CommentsTest@90f6bfd]" name="setUp" is-config="true" duration-ms="483" started-at="2021-04-30T20:12:51Z" finished-at="2021-04-30T20:12:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:testcase.singleEndpoint.comment.CommentsTest@90f6bfd]" name="testResponseCodeAndContentType" duration-ms="1456" started-at="2021-04-30T20:12:52Z" data-provider="validId" finished-at="2021-04-30T20:12:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:testcase.singleEndpoint.comment.CommentsTest@90f6bfd]" name="testResponseCodeAndContentType" duration-ms="171" started-at="2021-04-30T20:12:53Z" data-provider="validId" finished-at="2021-04-30T20:12:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidCommentsId(int)[pri:0, instance:testcase.singleEndpoint.comment.CommentsTest@90f6bfd]" name="testResponseCodeWithInvalidCommentsId" duration-ms="128" started-at="2021-04-30T20:12:53Z" data-provider="invalidId" finished-at="2021-04-30T20:12:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidCommentsId -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidCommentsId(int)[pri:0, instance:testcase.singleEndpoint.comment.CommentsTest@90f6bfd]" name="testResponseCodeWithInvalidCommentsId" duration-ms="452" started-at="2021-04-30T20:12:53Z" data-provider="invalidId" finished-at="2021-04-30T20:12:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidCommentsId -->
        <test-method status="PASS" signature="testResponseStatusCode200AndContentTypeJSON()[pri:0, instance:testcase.singleEndpoint.comment.CommentsTest@90f6bfd]" name="testResponseStatusCode200AndContentTypeJSON" duration-ms="89" started-at="2021-04-30T20:12:54Z" finished-at="2021-04-30T20:12:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseStatusCode200AndContentTypeJSON -->
        <test-method status="PASS" signature="testResponseBodyWithIdNameAndEmail(int, java.lang.String, java.lang.String)[pri:0, instance:testcase.singleEndpoint.comment.CommentsTest@90f6bfd]" name="testResponseBodyWithIdNameAndEmail" duration-ms="507" started-at="2021-04-30T20:12:54Z" data-provider="validCommentsIdWithNameAndEmail" depends-on-methods="testcase.singleEndpoint.comment.CommentsTest.testResponseCodeAndContentType" finished-at="2021-04-30T20:12:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id labore ex et quam laborum]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Eliseo@gardner.biz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdNameAndEmail -->
        <test-method status="PASS" signature="testResponseBodyWithIdNameAndEmail(int, java.lang.String, java.lang.String)[pri:0, instance:testcase.singleEndpoint.comment.CommentsTest@90f6bfd]" name="testResponseBodyWithIdNameAndEmail" duration-ms="86" started-at="2021-04-30T20:12:54Z" data-provider="validCommentsIdWithNameAndEmail" depends-on-methods="testcase.singleEndpoint.comment.CommentsTest.testResponseCodeAndContentType" finished-at="2021-04-30T20:12:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[quo vero reiciendis velit similique earum]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Jayne_Kuhic@sydney.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdNameAndEmail -->
        <test-method status="PASS" signature="fetchListOfCommentsAndAssertSize()[pri:0, instance:testcase.singleEndpoint.comment.CommentsTest@90f6bfd]" name="fetchListOfCommentsAndAssertSize" duration-ms="140" started-at="2021-04-30T20:12:55Z" depends-on-methods="testcase.singleEndpoint.comment.CommentsTest.testResponseStatusCode200AndContentTypeJSON" finished-at="2021-04-30T20:12:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchListOfCommentsAndAssertSize -->
      </class> <!-- testcase.singleEndpoint.comment.CommentsTest -->
      <class name="testcase.singleEndpoint.post.PostsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testcase.singleEndpoint.post.PostsTest@47f6473]" name="setUp" is-config="true" duration-ms="0" started-at="2021-04-30T20:12:55Z" finished-at="2021-04-30T20:12:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:testcase.singleEndpoint.post.PostsTest@47f6473]" name="testResponseCodeAndContentType" duration-ms="131" started-at="2021-04-30T20:12:55Z" data-provider="validId" finished-at="2021-04-30T20:12:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:testcase.singleEndpoint.post.PostsTest@47f6473]" name="testResponseCodeAndContentType" duration-ms="128" started-at="2021-04-30T20:12:55Z" data-provider="validId" finished-at="2021-04-30T20:12:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidPostsId(int)[pri:0, instance:testcase.singleEndpoint.post.PostsTest@47f6473]" name="testResponseCodeWithInvalidPostsId" duration-ms="86" started-at="2021-04-30T20:12:55Z" data-provider="invalidId" finished-at="2021-04-30T20:12:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidPostsId -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidPostsId(int)[pri:0, instance:testcase.singleEndpoint.post.PostsTest@47f6473]" name="testResponseCodeWithInvalidPostsId" duration-ms="464" started-at="2021-04-30T20:12:55Z" data-provider="invalidId" finished-at="2021-04-30T20:12:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidPostsId -->
        <test-method status="PASS" signature="testResponseStatusCode200AndContentTypeJSON()[pri:0, instance:testcase.singleEndpoint.post.PostsTest@47f6473]" name="testResponseStatusCode200AndContentTypeJSON" duration-ms="78" started-at="2021-04-30T20:12:55Z" finished-at="2021-04-30T20:12:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseStatusCode200AndContentTypeJSON -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleAndBody(int, java.lang.String)[pri:0, instance:testcase.singleEndpoint.post.PostsTest@47f6473]" name="testResponseBodyWithIdTitleAndBody" duration-ms="139" started-at="2021-04-30T20:12:56Z" data-provider="validPostsIdWithTitle" depends-on-methods="testcase.singleEndpoint.post.PostsTest.testResponseCodeAndContentType" finished-at="2021-04-30T20:12:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sunt aut facere repellat provident occaecati excepturi optio reprehenderit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleAndBody -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleAndBody(int, java.lang.String)[pri:0, instance:testcase.singleEndpoint.post.PostsTest@47f6473]" name="testResponseBodyWithIdTitleAndBody" duration-ms="104" started-at="2021-04-30T20:12:56Z" data-provider="validPostsIdWithTitle" depends-on-methods="testcase.singleEndpoint.post.PostsTest.testResponseCodeAndContentType" finished-at="2021-04-30T20:12:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qui est esse]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleAndBody -->
        <test-method status="PASS" signature="fetchListOfPostsAndAssertSize()[pri:0, instance:testcase.singleEndpoint.post.PostsTest@47f6473]" name="fetchListOfPostsAndAssertSize" duration-ms="142" started-at="2021-04-30T20:12:56Z" depends-on-methods="testcase.singleEndpoint.post.PostsTest.testResponseStatusCode200AndContentTypeJSON" finished-at="2021-04-30T20:12:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchListOfPostsAndAssertSize -->
      </class> <!-- testcase.singleEndpoint.post.PostsTest -->
      <class name="testcase.multipleEndpoints.comments.CommentsOfPostsByUserTest">
        <test-method status="PASS" signature="validateEmailFormatInCommentsForPostsByUser(java.lang.String)[pri:0, instance:testcase.multipleEndpoints.comments.CommentsOfPostsByUserTest@6b143ee9]" name="validateEmailFormatInCommentsForPostsByUser" duration-ms="2002" started-at="2021-04-30T20:12:57Z" data-provider="validUsername" finished-at="2021-04-30T20:12:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Samantha]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEmailFormatInCommentsForPostsByUser -->
      </class> <!-- testcase.multipleEndpoints.comments.CommentsOfPostsByUserTest -->
      <class name="testcase.singleEndpoint.user.UsersTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testcase.singleEndpoint.user.UsersTest@15975490]" name="setUp" is-config="true" duration-ms="0" started-at="2021-04-30T20:12:56Z" finished-at="2021-04-30T20:12:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:testcase.singleEndpoint.user.UsersTest@15975490]" name="testResponseCodeAndContentType" duration-ms="70" started-at="2021-04-30T20:12:56Z" data-provider="validId" finished-at="2021-04-30T20:12:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:testcase.singleEndpoint.user.UsersTest@15975490]" name="testResponseCodeAndContentType" duration-ms="130" started-at="2021-04-30T20:12:56Z" data-provider="validId" finished-at="2021-04-30T20:12:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidUsersId(int)[pri:0, instance:testcase.singleEndpoint.user.UsersTest@15975490]" name="testResponseCodeWithInvalidUsersId" duration-ms="133" started-at="2021-04-30T20:12:56Z" data-provider="invalidId" finished-at="2021-04-30T20:12:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidUsersId -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidUsersId(int)[pri:0, instance:testcase.singleEndpoint.user.UsersTest@15975490]" name="testResponseCodeWithInvalidUsersId" duration-ms="95" started-at="2021-04-30T20:12:56Z" data-provider="invalidId" finished-at="2021-04-30T20:12:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidUsersId -->
        <test-method status="PASS" signature="testResponseStatusCode200AndContentTypeJSON()[pri:0, instance:testcase.singleEndpoint.user.UsersTest@15975490]" name="testResponseStatusCode200AndContentTypeJSON" duration-ms="92" started-at="2021-04-30T20:12:56Z" finished-at="2021-04-30T20:12:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseStatusCode200AndContentTypeJSON -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleAndBody(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.singleEndpoint.user.UsersTest@15975490]" name="testResponseBodyWithIdTitleAndBody" duration-ms="89" started-at="2021-04-30T20:12:56Z" data-provider="validUserIdWithNameUsernameEmailPhoneAndWebsite" depends-on-methods="testcase.singleEndpoint.user.UsersTest.testResponseCodeAndContentType" finished-at="2021-04-30T20:12:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Leanne Graham]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bret]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sincere@april.biz]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1-770-736-8031 x56442]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[hildegard.org]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleAndBody -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleAndBody(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.singleEndpoint.user.UsersTest@15975490]" name="testResponseBodyWithIdTitleAndBody" duration-ms="81" started-at="2021-04-30T20:12:57Z" data-provider="validUserIdWithNameUsernameEmailPhoneAndWebsite" depends-on-methods="testcase.singleEndpoint.user.UsersTest.testResponseCodeAndContentType" finished-at="2021-04-30T20:12:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ervin Howell]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Antonette]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Shanna@melissa.tv]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[010-692-6593 x09125]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[anastasia.net]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleAndBody -->
        <test-method status="PASS" signature="fetchListOfUsersAndAssertSize()[pri:0, instance:testcase.singleEndpoint.user.UsersTest@15975490]" name="fetchListOfUsersAndAssertSize" duration-ms="110" started-at="2021-04-30T20:12:57Z" depends-on-methods="testcase.singleEndpoint.user.UsersTest.testResponseStatusCode200AndContentTypeJSON" finished-at="2021-04-30T20:12:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchListOfUsersAndAssertSize -->
      </class> <!-- testcase.singleEndpoint.user.UsersTest -->
    </test> <!-- Execute All Test Cases -->
  </suite> <!-- All Test Classes -->
</testng-results>
